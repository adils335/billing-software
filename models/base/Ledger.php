<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "ledger".
 *
 * @property integer $id
 * @property string $date
 * @property integer $account
 * @property integer $transaction_id
 * @property string $particular
 * @property string $credit
 * @property string $debit
 * @property integer $inout
 * @property integer $type
 * @property integer $entry_from
 * @property integer $company_id
 * @property string $session
 * @property integer $status
 * @property integer $created_at
 * @property integer $created_by
 * @property integer $updated_at
 * @property integer $updated_by
 *
 * @property \app\models\Company $company
 * @property \app\models\Payment $transaction
 * @property \app\models\VendorBill $vendorBill
 * @property string $aliasModel
 */
abstract class Ledger extends \yii\db\ActiveRecord
{


    public $account_type;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ledger';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['account', 'date', 'transaction_id', 'particular', 'type', 'company_id', 'session'], 'required'],
            [['account', 'transaction_id', 'inout', 'type', 'company_id', 'status','entry_from','account_type'], 'integer'],
            [['credit', 'debit'], 'number'],
            [['date'], 'string'],
            [['particular'], 'string', 'max' => 30],
            [['session'], 'string', 'max' => 7],
            [['company_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Company::className(), 'targetAttribute' => ['company_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'account' => Yii::t('models', 'Account'),
            'transaction_id' => Yii::t('models', 'Transaction ID'),
            'particular' => Yii::t('models', 'Particular'),
            'credit' => Yii::t('models', 'Credit'),
            'debit' => Yii::t('models', 'Debit'),
            'inout' => Yii::t('models', 'Inout'),
            'type' => Yii::t('models', 'Type'),
            'entry_from' => Yii::t('models', 'Entry From'),
            'company_id' => Yii::t('models', 'Company ID'),
            'session' => Yii::t('models', 'Session'),
            'status' => Yii::t('models', 'Status'),
            'created_at' => Yii::t('models', 'Created At'),
            'created_by' => Yii::t('models', 'Created By'),
            'updated_at' => Yii::t('models', 'Updated At'),
            'updated_by' => Yii::t('models', 'Updated By'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompany()
    {
        return $this->hasOne(\app\models\Company::className(), ['id' => 'company_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTransaction()
    {
        return $this->hasOne(\app\models\Payment::className(), ['id' => 'transaction_id']);
    }
    
    public function getVendorBill()
    {
        return $this->hasOne(\app\models\VendorBill::className(), ['id' => 'transaction_id']);
    }
    public function getExtraSalary()
    {
        return $this->hasOne(\app\models\EmployeeExtraSalary::className(), ['id' => 'transaction_id']);
    }

}
