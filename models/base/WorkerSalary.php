<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "worker_salary".
 *
 * @property integer $id
 * @property integer $worker_vendor_id
 * @property integer $worker_id
 * @property string $month
 * @property string $base_salary
 * @property string $per_day_salary
 * @property integer $working_days
 * @property integer $leave
 * @property integer $extra_work_days
 * @property string $extra_salary
 * @property string $salary
 * @property string $allowance
 * @property string $salary_with_allowance
 * @property string $worker_deduction
 * @property string $payable_salary
 * @property string $employer_deduction
 * @property string $net_salary
 * @property string $session
 * @property integer $company_id
 * @property integer $status
 * @property integer $created_at
 * @property integer $created_by
 * @property integer $updated_at
 * @property integer $updated_by
 *
 * @property \app\models\Company $company
 * @property \app\models\Worker $worker
 * @property \app\models\WorkerSalaryAllowance[] $workerSalaryAllowances
 * @property \app\models\WorkerSalaryDeduction[] $workerSalaryDeductions
 * @property \app\models\WorkerVendor $workerVendor
 * @property string $aliasModel
 */
abstract class WorkerSalary extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'worker_salary';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['worker_vendor_id', 'worker_id', 'month', 'company_id'], 'required'],
            [['worker_vendor_id', 'worker_id', 'working_days', 'leave', 'extra_work_days', 'company_id', 'status'], 'integer'],
            [['month'], 'safe'],
            [['base_salary', 'per_day_salary', 'extra_salary', 'salary', 'allowance', 'salary_with_allowance', 'worker_deduction', 'payable_salary', 'employer_deduction', 'net_salary'], 'number'],
            [['session'], 'string', 'max' => 10],
            [['worker_id', 'month'], 'unique', 'targetAttribute' => ['worker_id', 'month']],
            [['company_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Company::className(), 'targetAttribute' => ['company_id' => 'id']],
            [['worker_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Worker::className(), 'targetAttribute' => ['worker_id' => 'id']],
            [['worker_vendor_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\WorkerVendor::className(), 'targetAttribute' => ['worker_vendor_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'worker_vendor_id' => Yii::t('models', 'Worker Vendor'),
            'worker_id' => Yii::t('models', 'Worker'),
            'month' => Yii::t('models', 'Month'),
            'base_salary' => Yii::t('models', 'Base Salary'),
            'per_day_salary' => Yii::t('models', 'Per Day Salary'),
            'working_days' => Yii::t('models', 'Working Days'),
            'leave' => Yii::t('models', 'Leave'),
            'extra_work_days' => Yii::t('models', 'Extra Work Days'),
            'extra_salary' => Yii::t('models', 'Extra Salary'),
            'salary' => Yii::t('models', 'Salary'),
            'allowance' => Yii::t('models', 'Allowance'),
            'salary_with_allowance' => Yii::t('models', 'Salary With Allowance'),
            'worker_deduction' => Yii::t('models', 'Worker Deduction'),
            'payable_salary' => Yii::t('models', 'Payable Salary'),
            'employer_deduction' => Yii::t('models', 'Employer Deduction'),
            'net_salary' => Yii::t('models', 'Net Salary'),
            'session' => Yii::t('models', 'Session'),
            'company_id' => Yii::t('models', 'Company'),
            'status' => Yii::t('models', 'Status'),
            'created_at' => Yii::t('models', 'Created At'),
            'created_by' => Yii::t('models', 'Created By'),
            'updated_at' => Yii::t('models', 'Updated At'),
            'updated_by' => Yii::t('models', 'Updated By'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompany()
    {
        return $this->hasOne(\app\models\Company::className(), ['id' => 'company_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getWorker()
    {
        return $this->hasOne(\app\models\Worker::className(), ['id' => 'worker_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getWorkerSalaryAllowances()
    {
        return $this->hasMany(\app\models\WorkerSalaryAllowance::className(), ['salary_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getWorkerSalaryDeductions()
    {
        return $this->hasMany(\app\models\WorkerSalaryDeduction::className(), ['salary_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getWorkerVendor()
    {
        return $this->hasOne(\app\models\WorkerVendor::className(), ['id' => 'worker_vendor_id']);
    }




}
