<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "employee_salary".
 *
 * @property integer $id
 * @property integer $employee_id
 * @property string $month
 * @property string $base_salary
 * @property string $per_day_salary
 * @property integer $actual_working_days
 * @property integer $working_days
 * @property integer $holidays
 * @property integer $leave
 * @property integer $balanced_leave
 * @property integer $extra_work_days
 * @property integer $extra_salary
 * @property string $salary
 * @property string $allowance
 * @property string $salary_with_allowance
 * @property string $employee_deduction
 * @property string $payable_salary
 * @property string $employer_deduction
 * @property string $net_salary
 * @property string $session
 * @property integer $company_id
 * @property integer $status
 * @property integer $created_at
 * @property integer $created_by
 * @property integer $updated_at
 * @property integer $updated_by
 *
 * @property \app\models\Company $company
 * @property \app\models\Employee $employee
 * @property \app\models\EmployeeSalaryAllowance[] $employeeSalaryAllowances
 * @property \app\models\EmployeeSalaryDeduction[] $employeeSalaryDeductions
 * @property string $aliasModel
 */
abstract class EmployeeSalary extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'employee_salary';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['employee_id', 'month', 'company_id'], 'required'],
            [['employee_id', 'actual_working_days','working_days','holidays', 'leave', 'extra_work_days', 'company_id', 'status','balanced_leave'], 'integer'],
            [['month'], 'safe'],
            [['base_salary', 'per_day_salary', 'salary', 'allowance', 'salary_with_allowance', 'employee_deduction', 'payable_salary', 'employer_deduction', 'net_salary','extra_salary'], 'number'],
            [['session'], 'string', 'max' => 10],
            [['employee_id', 'month'], 'unique', 'targetAttribute' => ['employee_id', 'month']],
            [['company_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Company::className(), 'targetAttribute' => ['company_id' => 'id']],
            [['employee_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Employee::className(), 'targetAttribute' => ['employee_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'employee_id' => Yii::t('models', 'Employee ID'),
            'month' => Yii::t('models', 'Month'),
            'base_salary' => Yii::t('models', 'Base Salary'),
            'per_day_salary' => Yii::t('models', 'Per Day Salary'),
            'actual_working_days' => Yii::t('models', 'Actual Working Days'),
            'working_days' => Yii::t('models', 'Working Days'),
            'holidays' => Yii::t('models', 'Holidays'),
            'leave' => Yii::t('models', 'Leave'),
            'balanced_leave' => Yii::t('models', 'Balanced Leave'),
            'extra_work_days' => Yii::t('models', 'Extra Work Days'),
            'extra_salary' => Yii::t('models', 'Extra Work'),
            'salary' => Yii::t('models', 'Salary'),
            'allowance' => Yii::t('models', 'Allowance'),
            'salary_with_allowance' => Yii::t('models', 'Salary With Allowance'),
            'employee_deduction' => Yii::t('models', 'Employee Deduction'),
            'payable_salary' => Yii::t('models', 'Payable Salary'),
            'employer_deduction' => Yii::t('models', 'Employer Deduction'),
            'net_salary' => Yii::t('models', 'Net Salary'),
            'session' => Yii::t('models', 'Session'),
            'company_id' => Yii::t('models', 'Company ID'),
            'status' => Yii::t('models', 'Status'),
            'created_at' => Yii::t('models', 'Created At'),
            'created_by' => Yii::t('models', 'Created By'),
            'updated_at' => Yii::t('models', 'Updated At'),
            'updated_by' => Yii::t('models', 'Updated By'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompany()
    {
        return $this->hasOne(\app\models\Company::className(), ['id' => 'company_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEmployee()
    {
        return $this->hasOne(\app\models\Employee::className(), ['id' => 'employee_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEmployeeSalaryAllowances()
    {
        return $this->hasMany(\app\models\EmployeeSalaryAllowance::className(), ['salary_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEmployeeSalaryDeductions()
    {
        return $this->hasMany(\app\models\EmployeeSalaryDeduction::className(), ['salary_id' => 'id']);
    }
    



}
